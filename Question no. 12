/*Implement the multi-level feedback queue scheduling algorithm: You can use the code of
others to implement Round-Robin, and FCFS but implement aging by your own self */
 
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>  
int main()
{
	int i,j,n,temp1,temp2,temp3;
	printf("Enter the number of process: \n");
	scanf("%d",&n);
	int at[n],bt[n],ct[n];
	for(i=0;i<n;i++)
{
		printf("Arrival time of the process\n");
		scanf("%d",&at[i]);
		printf("Burst time of the process\n");
		scanf("%d",&bt[i]);
		ct[i]=i+1;
}
for(i=0;i<n;i++)
	{
		for(j=0;j<n-i-1;j++)
		{
			if(at[j]>at[j+1])
			{
				temp1=at[j+1];
				at[j+1]=at[j];
				at[j]=temp1;
				temp2=bt[j+1];
				bt[j+1]=bt[j];
				bt[j]=temp2;
				temp3=ct[j+1];
				ct[j+1]=ct[j];
				ct[j]=temp3;
			}
		}
	}
	for(i=0;i<n;i++)
	{
		if(bt[i]>8)
		{
			bt[i]=bt[i]-8;
			printf("Process %d ,time left is %d \n",ct[i],bt[i]);
			
		}
		else
		{
			printf("Process %d , completed \n",ct[i]);
			bt[i]=0;
		}
	}
	for(i=0;i<n;i++)
	{
		if(bt[i]>16)
		{
			bt[i]=bt[i]-16;
			printf("Process %d ,time left is %d \n",ct[i],bt[i]);
			
		}
		else
		{
			printf("Process %d , completed \n",ct[i]);
			bt[i]=0;
		}
	}
	for(i=0;i<n;i++)
	{
		if(bt[i]>0)
		printf("Process %d , completed");
	}
}
 
